---
name: traefik-tls-example

networks:
  this-net: {}

services:

  this-server:
    image: containous/whoami
    container_name: this-server
    restart: always
    networks:
      - this-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.this.rule=Host(`${SERVER_HOST}`)"
      - "traefik.http.routers.this.entrypoints=web"
      - "traefik.http.routers.this.middlewares=redirect-https"
      - "traefik.http.routers.this-secure.rule=Host(`${SERVER_HOST}`)"
      - "traefik.http.routers.this-secure.entrypoints=web-secure"
      - "traefik.http.routers.this-secure.service=this-secure"
      - "traefik.http.routers.this-secure.tls=true"
      - "traefik.http.routers.this-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.this-secure.loadbalancer.server.port=80"
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
      - "traefik.docker.network=this-net"

  traefik:
    container_name: traefik
    image: traefik:v2.9
    restart: always
    networks:
      - this-net
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/letsencrypt:/letsencrypt
